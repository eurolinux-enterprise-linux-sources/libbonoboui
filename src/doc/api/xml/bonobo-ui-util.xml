<refentry id="libbonoboui-bonobo-ui-util">
<refmeta>
<refentrytitle role="top_of_page" id="libbonoboui-bonobo-ui-util.top_of_page">bonobo-ui-util</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBBONOBOUI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>bonobo-ui-util</refname>
<refpurpose>A collection of utility functions to help with UI related issues</refpurpose>
</refnamediv>

<refsynopsisdiv id="libbonoboui-bonobo-ui-util.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
<link linkend="char">char</link> *              <link linkend="bonobo-ui-util-pixbuf-to-xml">bonobo_ui_util_pixbuf_to_xml</link>        (<link linkend="GdkPixbuf">GdkPixbuf</link> *pixbuf);
<link linkend="GdkPixbuf">GdkPixbuf</link> *         <link linkend="bonobo-ui-util-xml-to-pixbuf">bonobo_ui_util_xml_to_pixbuf</link>        (const <link linkend="char">char</link> *xml);
<link linkend="GtkWidget">GtkWidget</link> *         <link linkend="bonobo-ui-util-xml-get-icon-widget">bonobo_ui_util_xml_get_icon_widget</link>  (<link linkend="BonoboUINode">BonoboUINode</link> *node,
                                                         <link linkend="GtkIconSize">GtkIconSize</link> icon_size);
<link linkend="void">void</link>                <link linkend="bonobo-ui-util-xml-set-pixbuf">bonobo_ui_util_xml_set_pixbuf</link>       (<link linkend="BonoboUINode">BonoboUINode</link> *node,
                                                         <link linkend="GdkPixbuf">GdkPixbuf</link> *pixbuf);
<link linkend="void">void</link>                <link linkend="bonobo-ui-util-build-help-menu">bonobo_ui_util_build_help_menu</link>      (<link linkend="BonoboUIComponent">BonoboUIComponent</link> *listener,
                                                         const <link linkend="char">char</link> *app_prefix,
                                                         const <link linkend="char">char</link> *app_name,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *parent);
<link linkend="char">char</link> *              <link linkend="bonobo-ui-util-get-ui-fname">bonobo_ui_util_get_ui_fname</link>         (const <link linkend="char">char</link> *component_prefix,
                                                         const <link linkend="char">char</link> *file_name);
<link linkend="void">void</link>                <link linkend="bonobo-ui-util-translate-ui">bonobo_ui_util_translate_ui</link>         (<link linkend="BonoboUINode">BonoboUINode</link> *node);
<link linkend="void">void</link>                <link linkend="bonobo-ui-util-fixup-help">bonobo_ui_util_fixup_help</link>           (<link linkend="BonoboUIComponent">BonoboUIComponent</link> *component,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *node,
                                                         const <link linkend="char">char</link> *app_prefix,
                                                         const <link linkend="char">char</link> *app_name);
<link linkend="void">void</link>                <link linkend="bonobo-ui-util-fixup-icons">bonobo_ui_util_fixup_icons</link>          (<link linkend="BonoboUINode">BonoboUINode</link> *node);
<link linkend="BonoboUINode">BonoboUINode</link> *      <link linkend="bonobo-ui-util-new-ui">bonobo_ui_util_new_ui</link>               (<link linkend="BonoboUIComponent">BonoboUIComponent</link> *component,
                                                         const <link linkend="char">char</link> *fname,
                                                         const <link linkend="char">char</link> *app_prefix,
                                                         const <link linkend="char">char</link> *app_name);
<link linkend="void">void</link>                <link linkend="bonobo-ui-util-set-ui">bonobo_ui_util_set_ui</link>               (<link linkend="BonoboUIComponent">BonoboUIComponent</link> *component,
                                                         const <link linkend="char">char</link> *app_prefix,
                                                         const <link linkend="char">char</link> *file_name,
                                                         const <link linkend="char">char</link> *app_name,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="void">void</link>                <link linkend="bonobo-ui-util-set-pixbuf">bonobo_ui_util_set_pixbuf</link>           (<link linkend="BonoboUIComponent">BonoboUIComponent</link> *component,
                                                         const <link linkend="char">char</link> *path,
                                                         <link linkend="GdkPixbuf">GdkPixbuf</link> *pixbuf,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);
<link linkend="gchar">gchar</link> *             <link linkend="bonobo-ui-util-accel-name">bonobo_ui_util_accel_name</link>           (<link linkend="guint">guint</link> accelerator_key,
                                                         <link linkend="GdkModifierType">GdkModifierType</link> accelerator_mods);
<link linkend="void">void</link>                <link linkend="bonobo-ui-util-accel-parse">bonobo_ui_util_accel_parse</link>          (const <link linkend="char">char</link> *name,
                                                         <link linkend="guint">guint</link> *accelerator_key,
                                                         <link linkend="GdkModifierType">GdkModifierType</link> *accelerator_mods);
#define             <link linkend="bonobo-ui-util-decode-str">bonobo_ui_util_decode_str</link>           (s,e)
#define             <link linkend="bonobo-ui-util-encode-str">bonobo_ui_util_encode_str</link>           (s)
</synopsis>
</refsynopsisdiv>









<refsect1 id="libbonoboui-bonobo-ui-util.description" role="desc">
<title role="desc.title">Description</title>
<para>
The UI utilities do man things, mostly concerned with smoothing
the flow of XML data from containee to container. There are also
several generaly useful functions used internaly for manipulating
pixmaps. Also, code for stringifying accelerators, fixing up help
and working around libxml bugs. Also a large chunk of code is
included for dynamic UI tree building that is now strongly
deprecated by the various tools to do this from dynamic files.
</para>
</refsect1>

<refsect1 id="libbonoboui-bonobo-ui-util.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="bonobo-ui-util-pixbuf-to-xml" role="function">
<title>bonobo_ui_util_pixbuf_to_xml ()</title>
<indexterm zone="bonobo-ui-util-pixbuf-to-xml"><primary sortas="bonobo_ui_util_pixbuf_to_xml">bonobo_ui_util_pixbuf_to_xml</primary></indexterm><programlisting><link linkend="char">char</link> *              bonobo_ui_util_pixbuf_to_xml        (<link linkend="GdkPixbuf">GdkPixbuf</link> *pixbuf);</programlisting>
<para>
Convert a <parameter>pixbuf</parameter> to a string representation suitable
for passing as a "pixname" attribute with a pixtype
attribute = "pixbuf".</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>pixbuf</parameter>&#160;:</term>
<listitem><simpara> a GdkPixbuf
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the stringified pixbuf.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-util-xml-to-pixbuf" role="function">
<title>bonobo_ui_util_xml_to_pixbuf ()</title>
<indexterm zone="bonobo-ui-util-xml-to-pixbuf"><primary sortas="bonobo_ui_util_xml_to_pixbuf">bonobo_ui_util_xml_to_pixbuf</primary></indexterm><programlisting><link linkend="GdkPixbuf">GdkPixbuf</link> *         bonobo_ui_util_xml_to_pixbuf        (const <link linkend="char">char</link> *xml);</programlisting>
<para>
This converts a stringified pixbuf in <parameter>xml</parameter> into a GdkPixbuf</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>xml</parameter>&#160;:</term>
<listitem><simpara> a string
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a handed reference to the created GdkPixbuf.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-util-xml-get-icon-widget" role="function">
<title>bonobo_ui_util_xml_get_icon_widget ()</title>
<indexterm zone="bonobo-ui-util-xml-get-icon-widget"><primary sortas="bonobo_ui_util_xml_get_icon_widget">bonobo_ui_util_xml_get_icon_widget</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link> *         bonobo_ui_util_xml_get_icon_widget  (<link linkend="BonoboUINode">BonoboUINode</link> *node,
                                                         <link linkend="GtkIconSize">GtkIconSize</link> icon_size);</programlisting>
<para>
This function extracts a pixbuf from the node and returns a GtkWidget
containing a display of the pixbuf.
</para>
<para>
Unused internally.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara> the node
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>icon_size</parameter>&#160;:</term>
<listitem><simpara> the desired size of the icon
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the widget.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-util-xml-set-pixbuf" role="function">
<title>bonobo_ui_util_xml_set_pixbuf ()</title>
<indexterm zone="bonobo-ui-util-xml-set-pixbuf"><primary sortas="bonobo_ui_util_xml_set_pixbuf">bonobo_ui_util_xml_set_pixbuf</primary></indexterm><programlisting><link linkend="void">void</link>                bonobo_ui_util_xml_set_pixbuf       (<link linkend="BonoboUINode">BonoboUINode</link> *node,
                                                         <link linkend="GdkPixbuf">GdkPixbuf</link> *pixbuf);</programlisting>
<para>
Associate <parameter>pixbuf</parameter> with this <parameter>node</parameter> by stringifying it and setting
the requisite attributes.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara> the node
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pixbuf</parameter>&#160;:</term>
<listitem><simpara> the pixbuf
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-util-build-help-menu" role="function">
<title>bonobo_ui_util_build_help_menu ()</title>
<indexterm zone="bonobo-ui-util-build-help-menu"><primary sortas="bonobo_ui_util_build_help_menu">bonobo_ui_util_build_help_menu</primary></indexterm><programlisting><link linkend="void">void</link>                bonobo_ui_util_build_help_menu      (<link linkend="BonoboUIComponent">BonoboUIComponent</link> *listener,
                                                         const <link linkend="char">char</link> *app_prefix,
                                                         const <link linkend="char">char</link> *app_name,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *parent);</programlisting>
<para>
This routine inserts all the help menu items appropriate for this
application as children of the <parameter>parent</parameter> node.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>listener</parameter>&#160;:</term>
<listitem><simpara> associated component
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>app_prefix</parameter>&#160;:</term>
<listitem><simpara> application prefix
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>app_name</parameter>&#160;:</term>
<listitem><simpara> application name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>parent</parameter>&#160;:</term>
<listitem><simpara> toplevel node
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-util-get-ui-fname" role="function">
<title>bonobo_ui_util_get_ui_fname ()</title>
<indexterm zone="bonobo-ui-util-get-ui-fname"><primary sortas="bonobo_ui_util_get_ui_fname">bonobo_ui_util_get_ui_fname</primary></indexterm><programlisting><link linkend="char">char</link> *              bonobo_ui_util_get_ui_fname         (const <link linkend="char">char</link> *component_prefix,
                                                         const <link linkend="char">char</link> *file_name);</programlisting>
<para>
Builds a path to the xml file that stores the GUI.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>component_prefix</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>file_name</parameter>&#160;:</term>
<listitem><simpara> the file name of the xml file.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the path to the file that describes the
UI or NULL if it is not found.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-util-translate-ui" role="function">
<title>bonobo_ui_util_translate_ui ()</title>
<indexterm zone="bonobo-ui-util-translate-ui"><primary sortas="bonobo_ui_util_translate_ui">bonobo_ui_util_translate_ui</primary></indexterm><programlisting><link linkend="void">void</link>                bonobo_ui_util_translate_ui         (<link linkend="BonoboUINode">BonoboUINode</link> *node);</programlisting>
<para>
Quest through a tree looking for translatable properties
( those prefixed with an '_' ). Translates the value of the
property and removes the leading '_'.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara> the node to start at.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-util-fixup-help" role="function">
<title>bonobo_ui_util_fixup_help ()</title>
<indexterm zone="bonobo-ui-util-fixup-help"><primary sortas="bonobo_ui_util_fixup_help">bonobo_ui_util_fixup_help</primary></indexterm><programlisting><link linkend="void">void</link>                bonobo_ui_util_fixup_help           (<link linkend="BonoboUIComponent">BonoboUIComponent</link> *component,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *node,
                                                         const <link linkend="char">char</link> *app_prefix,
                                                         const <link linkend="char">char</link> *app_name);</programlisting>
<para>
This searches for 'BuiltMenuItems' placeholders, and then
fills them with the application's menu items.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>component</parameter>&#160;:</term>
<listitem><simpara> the UI component
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara> the node to search under
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>app_prefix</parameter>&#160;:</term>
<listitem><simpara> the application prefix
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>app_name</parameter>&#160;:</term>
<listitem><simpara> the application name
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-util-fixup-icons" role="function">
<title>bonobo_ui_util_fixup_icons ()</title>
<indexterm zone="bonobo-ui-util-fixup-icons"><primary sortas="bonobo_ui_util_fixup_icons">bonobo_ui_util_fixup_icons</primary></indexterm><programlisting><link linkend="void">void</link>                bonobo_ui_util_fixup_icons          (<link linkend="BonoboUINode">BonoboUINode</link> *node);</programlisting>
<para>
This function is used to ensure filename pixbuf attributes are
converted to in-line pixbufs on the server side, so that we don't
sent a ( possibly invalid ) filename across the wire.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara> the node
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-util-new-ui" role="function">
<title>bonobo_ui_util_new_ui ()</title>
<indexterm zone="bonobo-ui-util-new-ui"><primary sortas="bonobo_ui_util_new_ui">bonobo_ui_util_new_ui</primary></indexterm><programlisting><link linkend="BonoboUINode">BonoboUINode</link> *      bonobo_ui_util_new_ui               (<link linkend="BonoboUIComponent">BonoboUIComponent</link> *component,
                                                         const <link linkend="char">char</link> *fname,
                                                         const <link linkend="char">char</link> *app_prefix,
                                                         const <link linkend="char">char</link> *app_name);</programlisting>
<para>
Loads an xml tree from a file, cleans the 
doc cruft from its nodes; and translates the nodes.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>component</parameter>&#160;:</term>
<listitem><simpara> The component help callback should be on
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fname</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>app_prefix</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>app_name</parameter>&#160;:</term>
<listitem><simpara> Application name ( for finding help )
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> The translated tree ready to be merged.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-util-set-ui" role="function">
<title>bonobo_ui_util_set_ui ()</title>
<indexterm zone="bonobo-ui-util-set-ui"><primary sortas="bonobo_ui_util_set_ui">bonobo_ui_util_set_ui</primary></indexterm><programlisting><link linkend="void">void</link>                bonobo_ui_util_set_ui               (<link linkend="BonoboUIComponent">BonoboUIComponent</link> *component,
                                                         const <link linkend="char">char</link> *app_prefix,
                                                         const <link linkend="char">char</link> *file_name,
                                                         const <link linkend="char">char</link> *app_name,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
This function loads the UI from the associated file, translates it,
fixes up all the menus, ensures pixbuf filenames are resolved to xml
and then merges the XML to the remote container - this is the best
and most simple entry point for the new UI code.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>component</parameter>&#160;:</term>
<listitem><simpara> the component
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>app_prefix</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>file_name</parameter>&#160;:</term>
<listitem><simpara> the filename of the file to merge relative to the prefix.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>app_name</parameter>&#160;:</term>
<listitem><simpara> the application name - for help merging
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>opt_ev</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-util-set-pixbuf" role="function">
<title>bonobo_ui_util_set_pixbuf ()</title>
<indexterm zone="bonobo-ui-util-set-pixbuf"><primary sortas="bonobo_ui_util_set_pixbuf">bonobo_ui_util_set_pixbuf</primary></indexterm><programlisting><link linkend="void">void</link>                bonobo_ui_util_set_pixbuf           (<link linkend="BonoboUIComponent">BonoboUIComponent</link> *component,
                                                         const <link linkend="char">char</link> *path,
                                                         <link linkend="GdkPixbuf">GdkPixbuf</link> *pixbuf,
                                                         <link linkend="CORBA-Environment">CORBA_Environment</link> *opt_ev);</programlisting>
<para>
This helper function sets a pixbuf at a certain path into an
xml tree.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>component</parameter>&#160;:</term>
<listitem><simpara> the component
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&#160;:</term>
<listitem><simpara> the path into the xml tree
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pixbuf</parameter>&#160;:</term>
<listitem><simpara> the pixbuf
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>opt_ev</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-util-accel-name" role="function">
<title>bonobo_ui_util_accel_name ()</title>
<indexterm zone="bonobo-ui-util-accel-name"><primary sortas="bonobo_ui_util_accel_name">bonobo_ui_util_accel_name</primary></indexterm><programlisting><link linkend="gchar">gchar</link> *             bonobo_ui_util_accel_name           (<link linkend="guint">guint</link> accelerator_key,
                                                         <link linkend="GdkModifierType">GdkModifierType</link> accelerator_mods);</programlisting>
<para>
This stringifies an <parameter>accelerator_key</parameter> and some <parameter>accelerator_mods</parameter>
it is the converse of bonobo_ui_util_accel_parse</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>accelerator_key</parameter>&#160;:</term>
<listitem><simpara> the key
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>accelerator_mods</parameter>&#160;:</term>
<listitem><simpara> the modifiers
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the stringified representation
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-util-accel-parse" role="function">
<title>bonobo_ui_util_accel_parse ()</title>
<indexterm zone="bonobo-ui-util-accel-parse"><primary sortas="bonobo_ui_util_accel_parse">bonobo_ui_util_accel_parse</primary></indexterm><programlisting><link linkend="void">void</link>                bonobo_ui_util_accel_parse          (const <link linkend="char">char</link> *name,
                                                         <link linkend="guint">guint</link> *accelerator_key,
                                                         <link linkend="GdkModifierType">GdkModifierType</link> *accelerator_mods);</programlisting>
<para>
This parses the accelerator string and returns the key and mods
associated with it - using a similar format to Gtk+ but one which
doesn't involve inefficient XML entities and avoids other misc.
problems.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>accelerator_key</parameter>&#160;:</term>
<listitem><simpara> output of the key
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>accelerator_mods</parameter>&#160;:</term>
<listitem><simpara> output of the mods
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-util-decode-str" role="macro">
<title>bonobo_ui_util_decode_str()</title>
<indexterm zone="bonobo-ui-util-decode-str"><primary sortas="bonobo_ui_util_decode_str">bonobo_ui_util_decode_str</primary></indexterm><programlisting>#define         bonobo_ui_util_decode_str(s,e) g_strdup (s)
</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>s</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>e</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-util-encode-str" role="macro">
<title>bonobo_ui_util_encode_str()</title>
<indexterm zone="bonobo-ui-util-encode-str"><primary sortas="bonobo_ui_util_encode_str">bonobo_ui_util_encode_str</primary></indexterm><programlisting>#define         bonobo_ui_util_encode_str(s)   g_strdup (s)
</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>s</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
