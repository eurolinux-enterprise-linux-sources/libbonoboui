<refentry id="libbonoboui-bonobo-ui-sync">
<refmeta>
<refentrytitle role="top_of_page" id="libbonoboui-bonobo-ui-sync.top_of_page">BonoboUISync</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBBONOBOUI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>BonoboUISync</refname>
<refpurpose>A Synchronizer object to keep a widget tree in sync with an XML tree.</refpurpose>
</refnamediv>

<refsynopsisdiv id="libbonoboui-bonobo-ui-sync.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>
<anchor id="BonoboUISync"/>
<synopsis>
                    <link linkend="BonoboUISync-struct">BonoboUISync</link>;
<link linkend="void">void</link>                (<link linkend="BonoboUISyncStateFn">*BonoboUISyncStateFn</link>)              (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *node,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *cmd_node,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         <link linkend="GtkWidget">GtkWidget</link> *parent);
<link linkend="GtkWidget">GtkWidget</link> *         (<link linkend="BonoboUISyncBuildFn">*BonoboUISyncBuildFn</link>)              (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *node,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *cmd_node,
                                                         <link linkend="int">int</link> *pos,
                                                         <link linkend="GtkWidget">GtkWidget</link> *parent);
                    <link linkend="BonoboUISyncPrivate">BonoboUISyncPrivate</link>;
                    <link linkend="BonoboUISyncClass">BonoboUISyncClass</link>;
<link linkend="BonoboUISync">BonoboUISync</link> *      <link linkend="bonobo-ui-sync-construct">bonobo_ui_sync_construct</link>            (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="BonoboUIEngine">BonoboUIEngine</link> *engine,
                                                         <link linkend="gboolean">gboolean</link> is_recursive,
                                                         <link linkend="gboolean">gboolean</link> has_widgets);
<link linkend="gboolean">gboolean</link>            <link linkend="bonobo-ui-sync-is-recursive">bonobo_ui_sync_is_recursive</link>         (<link linkend="BonoboUISync">BonoboUISync</link> *sync);
<link linkend="gboolean">gboolean</link>            <link linkend="bonobo-ui-sync-has-widgets">bonobo_ui_sync_has_widgets</link>          (<link linkend="BonoboUISync">BonoboUISync</link> *sync);
<link linkend="void">void</link>                <link linkend="bonobo-ui-sync-remove-root">bonobo_ui_sync_remove_root</link>          (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *root);
<link linkend="void">void</link>                <link linkend="bonobo-ui-sync-update-root">bonobo_ui_sync_update_root</link>          (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *root);
<link linkend="void">void</link>                <link linkend="bonobo-ui-sync-state">bonobo_ui_sync_state</link>                (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *node,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *cmd_node,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         <link linkend="GtkWidget">GtkWidget</link> *parent);
<link linkend="void">void</link>                <link linkend="bonobo-ui-sync-state-placeholder">bonobo_ui_sync_state_placeholder</link>    (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *node,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *cmd_node,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         <link linkend="GtkWidget">GtkWidget</link> *parent);
<link linkend="GtkWidget">GtkWidget</link> *         <link linkend="bonobo-ui-sync-build">bonobo_ui_sync_build</link>                (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *node,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *cmd_node,
                                                         <link linkend="int">int</link> *pos,
                                                         <link linkend="GtkWidget">GtkWidget</link> *parent);
<link linkend="GtkWidget">GtkWidget</link> *         <link linkend="bonobo-ui-sync-build-placeholder">bonobo_ui_sync_build_placeholder</link>    (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *node,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *cmd_node,
                                                         <link linkend="int">int</link> *pos,
                                                         <link linkend="GtkWidget">GtkWidget</link> *parent);
<link linkend="gboolean">gboolean</link>            <link linkend="bonobo-ui-sync-ignore-widget">bonobo_ui_sync_ignore_widget</link>        (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget);
<link linkend="GList">GList</link> *             <link linkend="bonobo-ui-sync-get-widgets">bonobo_ui_sync_get_widgets</link>          (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *node);
<link linkend="void">void</link>                <link linkend="bonobo-ui-sync-stamp-root">bonobo_ui_sync_stamp_root</link>           (<link linkend="BonoboUISync">BonoboUISync</link> *sync);
<link linkend="gboolean">gboolean</link>            <link linkend="bonobo-ui-sync-can-handle">bonobo_ui_sync_can_handle</link>           (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *node);
<link linkend="GtkWidget">GtkWidget</link> *         <link linkend="bonobo-ui-sync-get-attached">bonobo_ui_sync_get_attached</link>         (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *node);
<link linkend="void">void</link>                <link linkend="bonobo-ui-sync-state-update">bonobo_ui_sync_state_update</link>         (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="char">char</link> *new_state);
<link linkend="gboolean">gboolean</link>            <link linkend="bonobo-ui-sync-do-show-hide">bonobo_ui_sync_do_show_hide</link>         (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *node,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *cmd_node,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget);
<link linkend="GtkWidget">GtkWidget</link> *         <link linkend="bonobo-ui-sync-wrap-widget">bonobo_ui_sync_wrap_widget</link>          (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="GtkWidget">GtkWidget</link> *custom_widget);
<link linkend="GType">GType</link>               <link linkend="bonobo-ui-sync-keys-get-type">bonobo_ui_sync_keys_get_type</link>        (void);
<link linkend="GType">GType</link>               <link linkend="bonobo-ui-sync-menu-get-type">bonobo_ui_sync_menu_get_type</link>        (void);
<link linkend="GType">GType</link>               <link linkend="bonobo-ui-sync-status-get-type">bonobo_ui_sync_status_get_type</link>      (void);
<link linkend="GType">GType</link>               <link linkend="bonobo-ui-sync-toolbar-get-type">bonobo_ui_sync_toolbar_get_type</link>     (void);
</synopsis>
</refsynopsisdiv>

<refsect1 id="libbonoboui-bonobo-ui-sync.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----BonoboUISync
</synopsis>
</refsect1>








<refsect1 id="libbonoboui-bonobo-ui-sync.description" role="desc">
<title role="desc.title">Description</title>
<para>
The BonoboUISynchronizer is used internaly by the <link linkend="BonoboUIEngine"><type>BonoboUIEngine</type></link>. Writing
one is a very advanced topic, and should only be attempted by carefuly study
of the code. No normal user should need to write his own synchronizer.
</para>
</refsect1>

<refsect1 id="libbonoboui-bonobo-ui-sync.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="BonoboUISync-struct" role="struct">
<title>BonoboUISync</title>
<indexterm zone="BonoboUISync-struct"><primary sortas="BonoboUISync">BonoboUISync</primary></indexterm><programlisting>typedef struct _BonoboUISync BonoboUISync;</programlisting>
<para>
</para></refsect2>
<refsect2 id="BonoboUISyncStateFn" role="function">
<title>BonoboUISyncStateFn ()</title>
<indexterm zone="BonoboUISyncStateFn"><primary sortas="BonoboUISyncStateFn">BonoboUISyncStateFn</primary></indexterm><programlisting><link linkend="void">void</link>                (*BonoboUISyncStateFn)              (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *node,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *cmd_node,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         <link linkend="GtkWidget">GtkWidget</link> *parent);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sync</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cmd_node</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>parent</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="BonoboUISyncBuildFn" role="function">
<title>BonoboUISyncBuildFn ()</title>
<indexterm zone="BonoboUISyncBuildFn"><primary sortas="BonoboUISyncBuildFn">BonoboUISyncBuildFn</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link> *         (*BonoboUISyncBuildFn)              (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *node,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *cmd_node,
                                                         <link linkend="int">int</link> *pos,
                                                         <link linkend="GtkWidget">GtkWidget</link> *parent);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sync</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cmd_node</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pos</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>parent</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="BonoboUISyncPrivate" role="struct">
<title>BonoboUISyncPrivate</title>
<indexterm zone="BonoboUISyncPrivate"><primary sortas="BonoboUISyncPrivate">BonoboUISyncPrivate</primary></indexterm><programlisting>typedef struct _BonoboUISyncPrivate BonoboUISyncPrivate;</programlisting>
<para>
</para></refsect2>
<refsect2 id="BonoboUISyncClass" role="struct">
<title>BonoboUISyncClass</title>
<indexterm zone="BonoboUISyncClass"><primary sortas="BonoboUISyncClass">BonoboUISyncClass</primary></indexterm><programlisting>typedef struct {
	GObjectClass parent_class;

	BonoboUISyncStateFn sync_state;
	BonoboUISyncStateFn sync_state_placeholder;
	BonoboUISyncBuildFn build;
	BonoboUISyncBuildFn build_placeholder;

	void          (*update_root)     (BonoboUISync     *sync,
					  BonoboUINode     *root);

	void          (*remove_root)     (BonoboUISync     *sync,
					  BonoboUINode     *root);

	GList        *(*get_widgets)     (BonoboUISync     *sync,
					  BonoboUINode     *node);

	void          (*state_update)    (BonoboUISync     *sync,
					  GtkWidget        *widget,
					  const char       *new_state);
	
	gboolean      (*ignore_widget)   (BonoboUISync     *sync,
					  GtkWidget        *widget);
	
	gboolean      (*can_handle)      (BonoboUISync     *sync,
					  BonoboUINode     *node);
	
        void          (*stamp_root)      (BonoboUISync     *sync);

	GtkWidget    *(*get_attached)    (BonoboUISync     *sync,
					  GtkWidget        *widget,
					  BonoboUINode     *node);

	GtkWidget    *(*wrap_widget)     (BonoboUISync     *sync,
					  GtkWidget        *custom_widget);
} BonoboUISyncClass;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="bonobo-ui-sync-construct" role="function">
<title>bonobo_ui_sync_construct ()</title>
<indexterm zone="bonobo-ui-sync-construct"><primary sortas="bonobo_ui_sync_construct">bonobo_ui_sync_construct</primary></indexterm><programlisting><link linkend="BonoboUISync">BonoboUISync</link> *      bonobo_ui_sync_construct            (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="BonoboUIEngine">BonoboUIEngine</link> *engine,
                                                         <link linkend="gboolean">gboolean</link> is_recursive,
                                                         <link linkend="gboolean">gboolean</link> has_widgets);</programlisting>
<para>
Used to construct a new synchronizer object</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sync</parameter>&#160;:</term>
<listitem><simpara> the synchronizer
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>engine</parameter>&#160;:</term>
<listitem><simpara> the associated engine
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>is_recursive</parameter>&#160;:</term>
<listitem><simpara> whether it deals with its children recursively
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>has_widgets</parameter>&#160;:</term>
<listitem><simpara> whether it has associated widgets.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the new object.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-sync-is-recursive" role="function">
<title>bonobo_ui_sync_is_recursive ()</title>
<indexterm zone="bonobo-ui-sync-is-recursive"><primary sortas="bonobo_ui_sync_is_recursive">bonobo_ui_sync_is_recursive</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            bonobo_ui_sync_is_recursive         (<link linkend="BonoboUISync">BonoboUISync</link> *sync);</programlisting>
<para>
</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sync</parameter>&#160;:</term>
<listitem><simpara> the synchronizer
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> whether this deals with its children recursively
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-sync-has-widgets" role="function">
<title>bonobo_ui_sync_has_widgets ()</title>
<indexterm zone="bonobo-ui-sync-has-widgets"><primary sortas="bonobo_ui_sync_has_widgets">bonobo_ui_sync_has_widgets</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            bonobo_ui_sync_has_widgets          (<link linkend="BonoboUISync">BonoboUISync</link> *sync);</programlisting>
<para>
</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sync</parameter>&#160;:</term>
<listitem><simpara> the synchronizer 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> whether this deals with widgets
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-sync-remove-root" role="function">
<title>bonobo_ui_sync_remove_root ()</title>
<indexterm zone="bonobo-ui-sync-remove-root"><primary sortas="bonobo_ui_sync_remove_root">bonobo_ui_sync_remove_root</primary></indexterm><programlisting><link linkend="void">void</link>                bonobo_ui_sync_remove_root          (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *root);</programlisting>
<para>
This is called when a 'root' or toplevel node is
removed that this synchronizer deals with. eg. in
the toolbar case, this might trigger hiding an
associated dock item.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sync</parameter>&#160;:</term>
<listitem><simpara> the synchronizer 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>root</parameter>&#160;:</term>
<listitem><simpara> the toplevel node to be removed.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-sync-update-root" role="function">
<title>bonobo_ui_sync_update_root ()</title>
<indexterm zone="bonobo-ui-sync-update-root"><primary sortas="bonobo_ui_sync_update_root">bonobo_ui_sync_update_root</primary></indexterm><programlisting><link linkend="void">void</link>                bonobo_ui_sync_update_root          (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *root);</programlisting>
<para>
This flags the fact that a toplevel node has changed
and is used primarily by non-recursive handlers, such
as the keybinding sync method.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sync</parameter>&#160;:</term>
<listitem><simpara> the synchronizer 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>root</parameter>&#160;:</term>
<listitem><simpara> the toplevel node
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-sync-state" role="function">
<title>bonobo_ui_sync_state ()</title>
<indexterm zone="bonobo-ui-sync-state"><primary sortas="bonobo_ui_sync_state">bonobo_ui_sync_state</primary></indexterm><programlisting><link linkend="void">void</link>                bonobo_ui_sync_state                (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *node,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *cmd_node,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         <link linkend="GtkWidget">GtkWidget</link> *parent);</programlisting>
<para>
This method is used to synchronize the state of a <parameter>node</parameter>
with that of a <parameter>widget</parameter>, by ensuring the pertainant
attributes are reflected in the widget view.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sync</parameter>&#160;:</term>
<listitem><simpara> the synchronizer 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara> the node 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cmd_node</parameter>&#160;:</term>
<listitem><simpara> the associated command node 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&#160;:</term>
<listitem><simpara> the widget 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>parent</parameter>&#160;:</term>
<listitem><simpara> the parent of <parameter>node</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-sync-state-placeholder" role="function">
<title>bonobo_ui_sync_state_placeholder ()</title>
<indexterm zone="bonobo-ui-sync-state-placeholder"><primary sortas="bonobo_ui_sync_state_placeholder">bonobo_ui_sync_state_placeholder</primary></indexterm><programlisting><link linkend="void">void</link>                bonobo_ui_sync_state_placeholder    (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *node,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *cmd_node,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         <link linkend="GtkWidget">GtkWidget</link> *parent);</programlisting>
<para>
This synchronizes the state of a placeholder, there is
a default implementation for this method.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sync</parameter>&#160;:</term>
<listitem><simpara> the synchronizer 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara> the node 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cmd_node</parameter>&#160;:</term>
<listitem><simpara> the associated command node 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&#160;:</term>
<listitem><simpara> the widget 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>parent</parameter>&#160;:</term>
<listitem><simpara> the parent of <parameter>node</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-sync-build" role="function">
<title>bonobo_ui_sync_build ()</title>
<indexterm zone="bonobo-ui-sync-build"><primary sortas="bonobo_ui_sync_build">bonobo_ui_sync_build</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link> *         bonobo_ui_sync_build                (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *node,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *cmd_node,
                                                         <link linkend="int">int</link> *pos,
                                                         <link linkend="GtkWidget">GtkWidget</link> *parent);</programlisting>
<para>
This function causes a child widget to be build that matches
<parameter>node</parameter>'s attributes. This should then be inserted by into
<parameter>parent</parameter>'s associated widget at position <parameter>pos</parameter> in the container.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sync</parameter>&#160;:</term>
<listitem><simpara> the synchronizer 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara> the node 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cmd_node</parameter>&#160;:</term>
<listitem><simpara> the associated command node 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pos</parameter>&#160;:</term>
<listitem><simpara> the position in the parent container to insert at
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>parent</parameter>&#160;:</term>
<listitem><simpara> the parent of <parameter>node</parameter> 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the freshly built widget.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-sync-build-placeholder" role="function">
<title>bonobo_ui_sync_build_placeholder ()</title>
<indexterm zone="bonobo-ui-sync-build-placeholder"><primary sortas="bonobo_ui_sync_build_placeholder">bonobo_ui_sync_build_placeholder</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link> *         bonobo_ui_sync_build_placeholder    (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *node,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *cmd_node,
                                                         <link linkend="int">int</link> *pos,
                                                         <link linkend="GtkWidget">GtkWidget</link> *parent);</programlisting>
<para>
As for <link linkend="bonobo-ui-sync-build"><type>bonobo_ui_sync_build</type></link> but for placeholders</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sync</parameter>&#160;:</term>
<listitem><simpara> the synchronizer 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara> the node 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cmd_node</parameter>&#160;:</term>
<listitem><simpara> the associated command node 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pos</parameter>&#160;:</term>
<listitem><simpara> position in the parent to insert the built widget
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>parent</parameter>&#160;:</term>
<listitem><simpara> the parent of <parameter>node</parameter> 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the freshly built widget.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-sync-ignore-widget" role="function">
<title>bonobo_ui_sync_ignore_widget ()</title>
<indexterm zone="bonobo-ui-sync-ignore-widget"><primary sortas="bonobo_ui_sync_ignore_widget">bonobo_ui_sync_ignore_widget</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            bonobo_ui_sync_ignore_widget        (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget);</programlisting>
<para>
</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sync</parameter>&#160;:</term>
<listitem><simpara> the synchronizer 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&#160;:</term>
<listitem><simpara> the widget 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if this widget should be ignored in a container
this is the case for eg. menu tearoffs items, and toolbar popout items.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-sync-get-widgets" role="function">
<title>bonobo_ui_sync_get_widgets ()</title>
<indexterm zone="bonobo-ui-sync-get-widgets"><primary sortas="bonobo_ui_sync_get_widgets">bonobo_ui_sync_get_widgets</primary></indexterm><programlisting><link linkend="GList">GList</link> *             bonobo_ui_sync_get_widgets          (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *node);</programlisting>
<para>
This method is used to obtain a sensibly ordered list
of child widgets of the container associated with <parameter>node</parameter>.
Essentialy this does something like gtk_container_children
but preserving the visible order of the widgets in the list.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sync</parameter>&#160;:</term>
<listitem><simpara> the synchronizer 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara> the node 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> An ordered list of child widgets of <parameter>node</parameter>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-sync-stamp-root" role="function">
<title>bonobo_ui_sync_stamp_root ()</title>
<indexterm zone="bonobo-ui-sync-stamp-root"><primary sortas="bonobo_ui_sync_stamp_root">bonobo_ui_sync_stamp_root</primary></indexterm><programlisting><link linkend="void">void</link>                bonobo_ui_sync_stamp_root           (<link linkend="BonoboUISync">BonoboUISync</link> *sync);</programlisting>
<para>
This asks the synchronizer to stamp all its associated
root widget containers into the XML tree.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sync</parameter>&#160;:</term>
<listitem><simpara> the synchronizer 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-sync-can-handle" role="function">
<title>bonobo_ui_sync_can_handle ()</title>
<indexterm zone="bonobo-ui-sync-can-handle"><primary sortas="bonobo_ui_sync_can_handle">bonobo_ui_sync_can_handle</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            bonobo_ui_sync_can_handle           (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *node);</programlisting>
<para>
This is used to determine which, of multiple synchronizers
can be used to deal with a specific node type. Each synchronizer
deals with different types of node.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sync</parameter>&#160;:</term>
<listitem><simpara> the synchronizer 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara> the node 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the synchronizer can deal with this node type
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-sync-get-attached" role="function">
<title>bonobo_ui_sync_get_attached ()</title>
<indexterm zone="bonobo-ui-sync-get-attached"><primary sortas="bonobo_ui_sync_get_attached">bonobo_ui_sync_get_attached</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link> *         bonobo_ui_sync_get_attached         (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *node);</programlisting>
<para>
This is used to get an 'attached' widget - some
widgets have associated widgets that are coupled
in strange ways - eg. GtkMenuItem &lt;-> GtkMenuShell
It is neccessary to store the GtkContainer item of
these couples in the XML tree, since then we can
do things more genericaly and cleanly.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sync</parameter>&#160;:</term>
<listitem><simpara> the synchronizer 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&#160;:</term>
<listitem><simpara> the widget 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara> the node 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> an associated widget or NULL if none exists.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-sync-state-update" role="function">
<title>bonobo_ui_sync_state_update ()</title>
<indexterm zone="bonobo-ui-sync-state-update"><primary sortas="bonobo_ui_sync_state_update">bonobo_ui_sync_state_update</primary></indexterm><programlisting><link linkend="void">void</link>                bonobo_ui_sync_state_update         (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         const <link linkend="char">char</link> *new_state);</programlisting>
<para>
This is used to synchronize state with a stateful widget,
eg. when a "state" attribute is set, this is not reflected
in the normal 'state-sync' process, but occurs later with
a set of state_updates to avoid re-enterancy problems.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sync</parameter>&#160;:</term>
<listitem><simpara> the synchronizer 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&#160;:</term>
<listitem><simpara> the widget 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>new_state</parameter>&#160;:</term>
<listitem><simpara> the new state
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-sync-do-show-hide" role="function">
<title>bonobo_ui_sync_do_show_hide ()</title>
<indexterm zone="bonobo-ui-sync-do-show-hide"><primary sortas="bonobo_ui_sync_do_show_hide">bonobo_ui_sync_do_show_hide</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            bonobo_ui_sync_do_show_hide         (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *node,
                                                         <link linkend="BonoboUINode">BonoboUINode</link> *cmd_node,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget);</programlisting>
<para>
This is a helper function that applies the hidden attribute
from either the <parameter>node</parameter> or fallback to the <parameter>cmd_node</parameter> to the
<parameter>widget</parameter>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sync</parameter>&#160;:</term>
<listitem><simpara> the synchronizer 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&#160;:</term>
<listitem><simpara> the node 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cmd_node</parameter>&#160;:</term>
<listitem><simpara> the associated command node 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&#160;:</term>
<listitem><simpara> the widget 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> TRUE if the widget's hidden / shown state changed,
this is needed to work around some nasty dock sizing bugs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-sync-wrap-widget" role="function">
<title>bonobo_ui_sync_wrap_widget ()</title>
<indexterm zone="bonobo-ui-sync-wrap-widget"><primary sortas="bonobo_ui_sync_wrap_widget">bonobo_ui_sync_wrap_widget</primary></indexterm><programlisting><link linkend="GtkWidget">GtkWidget</link> *         bonobo_ui_sync_wrap_widget          (<link linkend="BonoboUISync">BonoboUISync</link> *sync,
                                                         <link linkend="GtkWidget">GtkWidget</link> *custom_widget);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>sync</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>custom_widget</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-sync-keys-get-type" role="function">
<title>bonobo_ui_sync_keys_get_type ()</title>
<indexterm zone="bonobo-ui-sync-keys-get-type"><primary sortas="bonobo_ui_sync_keys_get_type">bonobo_ui_sync_keys_get_type</primary></indexterm><programlisting><link linkend="GType">GType</link>               bonobo_ui_sync_keys_get_type        (void);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-sync-menu-get-type" role="function">
<title>bonobo_ui_sync_menu_get_type ()</title>
<indexterm zone="bonobo-ui-sync-menu-get-type"><primary sortas="bonobo_ui_sync_menu_get_type">bonobo_ui_sync_menu_get_type</primary></indexterm><programlisting><link linkend="GType">GType</link>               bonobo_ui_sync_menu_get_type        (void);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-sync-status-get-type" role="function">
<title>bonobo_ui_sync_status_get_type ()</title>
<indexterm zone="bonobo-ui-sync-status-get-type"><primary sortas="bonobo_ui_sync_status_get_type">bonobo_ui_sync_status_get_type</primary></indexterm><programlisting><link linkend="GType">GType</link>               bonobo_ui_sync_status_get_type      (void);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-ui-sync-toolbar-get-type" role="function">
<title>bonobo_ui_sync_toolbar_get_type ()</title>
<indexterm zone="bonobo-ui-sync-toolbar-get-type"><primary sortas="bonobo_ui_sync_toolbar_get_type">bonobo_ui_sync_toolbar_get_type</primary></indexterm><programlisting><link linkend="GType">GType</link>               bonobo_ui_sync_toolbar_get_type     (void);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
