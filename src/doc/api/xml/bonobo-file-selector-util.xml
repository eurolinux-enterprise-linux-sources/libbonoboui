<refentry id="libbonoboui-bonobo-file-selector-util">
<refmeta>
<refentrytitle role="top_of_page" id="libbonoboui-bonobo-file-selector-util.top_of_page">bonobo-file-selector-util</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBBONOBOUI Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>bonobo-file-selector-util</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="libbonoboui-bonobo-file-selector-util.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
<link linkend="char">char</link> *              <link linkend="bonobo-file-selector-open">bonobo_file_selector_open</link>           (<link linkend="GtkWindow">GtkWindow</link> *parent,
                                                         <link linkend="gboolean">gboolean</link> enable_vfs,
                                                         const <link linkend="char">char</link> *title,
                                                         const <link linkend="char">char</link> *mime_types,
                                                         const <link linkend="char">char</link> *default_path);
<link linkend="char">char</link> **             <link linkend="bonobo-file-selector-open-multi">bonobo_file_selector_open_multi</link>     (<link linkend="GtkWindow">GtkWindow</link> *parent,
                                                         <link linkend="gboolean">gboolean</link> enable_vfs,
                                                         const <link linkend="char">char</link> *title,
                                                         const <link linkend="char">char</link> *mime_types,
                                                         const <link linkend="char">char</link> *default_path);
<link linkend="char">char</link> *              <link linkend="bonobo-file-selector-save">bonobo_file_selector_save</link>           (<link linkend="GtkWindow">GtkWindow</link> *parent,
                                                         <link linkend="gboolean">gboolean</link> enable_vfs,
                                                         const <link linkend="char">char</link> *title,
                                                         const <link linkend="char">char</link> *mime_types,
                                                         const <link linkend="char">char</link> *default_path,
                                                         const <link linkend="char">char</link> *default_filename);
</synopsis>
</refsynopsisdiv>









<refsect1 id="libbonoboui-bonobo-file-selector-util.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>

<refsect1 id="libbonoboui-bonobo-file-selector-util.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="bonobo-file-selector-open" role="function">
<title>bonobo_file_selector_open ()</title>
<indexterm zone="bonobo-file-selector-open"><primary sortas="bonobo_file_selector_open">bonobo_file_selector_open</primary></indexterm><programlisting><link linkend="char">char</link> *              bonobo_file_selector_open           (<link linkend="GtkWindow">GtkWindow</link> *parent,
                                                         <link linkend="gboolean">gboolean</link> enable_vfs,
                                                         const <link linkend="char">char</link> *title,
                                                         const <link linkend="char">char</link> *mime_types,
                                                         const <link linkend="char">char</link> *default_path);</programlisting>
<para>
Creates and shows a modal open file dialog, waiting for the user to
select a file or cancel before returning.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>parent</parameter>&#160;:</term>
<listitem><simpara> optional window the dialog should be a transient for.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enable_vfs</parameter>&#160;:</term>
<listitem><simpara> if FALSE, restrict files to local paths.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>title</parameter>&#160;:</term>
<listitem><simpara> optional window title to use
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mime_types</parameter>&#160;:</term>
<listitem><simpara> optional list of mime types to provide filters for.
  These are of the form: "HTML Files:text/html|Text Files:text/html,text/plain"
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>default_path</parameter>&#160;:</term>
<listitem><simpara> optional directory to start in
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the URI (or plain file path if <parameter>enable_vfs</parameter> is FALSE)
of the file selected, or NULL if cancel was pressed.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-file-selector-open-multi" role="function">
<title>bonobo_file_selector_open_multi ()</title>
<indexterm zone="bonobo-file-selector-open-multi"><primary sortas="bonobo_file_selector_open_multi">bonobo_file_selector_open_multi</primary></indexterm><programlisting><link linkend="char">char</link> **             bonobo_file_selector_open_multi     (<link linkend="GtkWindow">GtkWindow</link> *parent,
                                                         <link linkend="gboolean">gboolean</link> enable_vfs,
                                                         const <link linkend="char">char</link> *title,
                                                         const <link linkend="char">char</link> *mime_types,
                                                         const <link linkend="char">char</link> *default_path);</programlisting>
<para>
Creates and shows a modal open file dialog, waiting for the user to
select a file or cancel before returning.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>parent</parameter>&#160;:</term>
<listitem><simpara> optional window the dialog should be a transient for
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enable_vfs</parameter>&#160;:</term>
<listitem><simpara> if FALSE, restrict files to local paths.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>title</parameter>&#160;:</term>
<listitem><simpara> optional window title to use
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mime_types</parameter>&#160;:</term>
<listitem><simpara> optional list of mime types to provide filters for.
  These are of the form: "HTML Files:text/html|Text Files:text/html,text/plain"
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>default_path</parameter>&#160;:</term>
<listitem><simpara> optional directory to start in
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a NULL terminated string array of the selected URIs
(or local file paths if <parameter>enable_vfs</parameter> is FALSE), or NULL if cancel
was pressed.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="bonobo-file-selector-save" role="function">
<title>bonobo_file_selector_save ()</title>
<indexterm zone="bonobo-file-selector-save"><primary sortas="bonobo_file_selector_save">bonobo_file_selector_save</primary></indexterm><programlisting><link linkend="char">char</link> *              bonobo_file_selector_save           (<link linkend="GtkWindow">GtkWindow</link> *parent,
                                                         <link linkend="gboolean">gboolean</link> enable_vfs,
                                                         const <link linkend="char">char</link> *title,
                                                         const <link linkend="char">char</link> *mime_types,
                                                         const <link linkend="char">char</link> *default_path,
                                                         const <link linkend="char">char</link> *default_filename);</programlisting>
<para>
Creates and shows a modal save file dialog, waiting for the user to
select a file or cancel before returning.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>parent</parameter>&#160;:</term>
<listitem><simpara> optional window the dialog should be a transient for
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>enable_vfs</parameter>&#160;:</term>
<listitem><simpara> if FALSE, restrict files to local paths.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>title</parameter>&#160;:</term>
<listitem><simpara> optional window title to use
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>mime_types</parameter>&#160;:</term>
<listitem><simpara> optional list of mime types to provide filters for.
  These are of the form: "HTML Files:text/html|Text Files:text/html,text/plain"
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>default_path</parameter>&#160;:</term>
<listitem><simpara> optional directory to start in
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>default_filename</parameter>&#160;:</term>
<listitem><simpara> optional file name to default to
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the URI (or plain file path if <parameter>enable_vfs</parameter> is FALSE)
of the file selected, or NULL if cancel was pressed.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
